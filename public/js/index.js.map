{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";AAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAE,CAAC;AACpD,MAAM,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAE,CAAC;AAC1D,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAE,CAAC;AAC5D,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAE,CAAC;AACxD,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAE,CAAC;AAErD,IAAI,KAAK,GAAW,IAAI,CAAC;AACzB,IAAI,SAAS,GAAU,EAAE,CAAA;AACzB,IAAI,UAAU,GAAU,EAAE,CAAA;AAC1B,IAAI,SAAgB,CAAA;AAEpB,oCAAoC;AACpC,uDAAuD;AACvD,+CAA+C;AAC/C,mBAAmB;AACnB,0CAA0C;AAC1C,mCAAmC;AACnC,0CAA0C;AAC1C,2BAA2B;AAC3B,2CAA2C;AAC3C,oCAAoC;AACpC,2CAA2C;AAC3C,QAAQ;AACR,uCAAuC;AACvC,sBAAsB;AACtB,wBAAwB;AACxB,yBAAyB;AACzB,wBAAwB;AACxB,mCAAmC;AACnC,gDAAgD;AAChD,kCAAkC;AAClC,6BAA6B;AAC7B,QAAQ;AACR,MAAM;AAEN,0EAA0E;AAE1E,IAAI","sourcesContent":["const $numbers = document.querySelectorAll('.num')!;\nconst $operands = document.querySelectorAll('.operator')!;\nconst $clearEntry = document.querySelector('.clear-entry')!;\nconst $clearAll = document.querySelector('.all-clear')!;\nconst $display = document.querySelector('.display')!;\n\nlet first:boolean = true;\nlet firstHalf:string = ''\nlet secondHalf:string = ''\nlet operation:string\n\n// const check = (event: Event) => {\n//     const target = event.target as HTMLInputElement;\n//     if (target.tagName !== 'BUTTON') return;\n//     if (first) {\n//       if (firstHalf.length > 9) return;\n//       firstHalf += target.value;\n//       $display.textContent = firstHalf;\n//     } else if (!first) {\n//       if (secondHalf.length > 9) return;\n//       secondHalf += target.value;\n//       $display.textContent = secondHalf;\n//     }\n//     if (operation === 'all-clear') {\n//       first = true;\n//       firstHalf = '';\n//       secondHalf = '';\n//       operation = '';\n//       $display.textContent = '';\n//     } else if (operation === 'clear-entry') {\n//       if (first) firstHalf = ''\n//       else secondHalf = ''\n//     }\n//   }\n\n// const runOperation = (first:string, second:string, operand:string) => {\n\n// }\n"]}